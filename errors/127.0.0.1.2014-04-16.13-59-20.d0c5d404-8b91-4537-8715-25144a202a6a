(dp1
S'output'
p2
S"<type 'exceptions.SyntaxError'> invalid syntax (default.py, line 347)"
p3
sS'layer'
p4
S'/home/hduser/web2py/applications/Hadoop/controllers/default.py'
p5
sS'code'
p6
S'# coding: utf8\n# try something like poooooooooooda\nimport os\nimport subprocess\nimport MySQLdb\nimport json\nimport urllib2\nTable = "workflow";\nmachine="localhost";\ndatabase_name="hadoop";\ndb_username="root";\npassword="hadoop";\npolicy_name = "anuraag1"\n@auth.requires_login()\ndef index():\n#    return dict(a=1);\n    redirect(URL(\'db_combination\'));\n#    redirect(URL(\'all_jobs\'));\n\n    return dict(message="hello from default.py")\ndef compile1():\n    return dict(hello="hello");\ntkns=[]\ncodegen1="";\ndef codegen():\n    print "the tables is"\n    print Table;\n    posvars=request.post_vars;\n#    //codegen:          generate import-export code without performing actual import/export, modify the gnerated java file, compile it to jar, give it to sqoop.\n#    global $TABLE,$machine,$password,$db_username,$database_name;\n    global codegen1;\n    try:\n    \tos.remove(Table+".java");\n    except:\n    \tprint ""\n    try:\n    \tos.remove(Table+".jar");\n    except:\n    \tprint ""\n    try:\n    \tos.remove(Table+".class")\n    except:\n    \tprint ""\n    codegen1= "sqoop codegen --connect jdbc:mysql://"+machine+"/"+database_name+" --username "+db_username+" --password \'"+password+"\' --table "+Table ;\n    """\n        if posvars[\'op\']=="import":\n            if posvars[\'field_delim\']!="":\n                codegen1=codegen1+" --fields-terminated-by "+"\'" +posvars[\'field_delim\']+"\'";\n            if posvars[\'line_delim\']!="":\n                codegen1=codegen1+" --lines-terminated-by "+"\'" +posvars[\'line_delim\']+"\'";\n            if \'enclosed\' in posvars:\n                if posvars[\'enclosingchar\']==\'"\':\n                    posvars[\'enclosingchar\']=\'\\"\';\n                    codegen1=codegen1+" "+posvars[\'enclosed\']+" \'"+posvars[\'enclosingchar\']+ "\'";\n    """\n    codegen1 = codegen1+"  2> err ; echo $?";\n\n    output = os.popen(codegen1).read()\n\n\ndef codechange(table,list_encrypt,list_mask,jsonobj):\n\tprint jsonobj;\n\tf = open(table+\'.java\');\n\tlines = f.readlines();\n\tf.close();\n\n\tf = open(\'encrypt_decrypt_functions.txt\');\n\tlines1 = f.readlines();\n\tf.close();\n\n\tf = open(\'mask.txt\');\n\tlines2 = f.readlines();\n\tf.close();\n\n\tf = open(\'unmask.txt\');\n\tlines3 = f.readlines();\n\tf.close();\n\n\tlines_mask = [];\n\tlines_mask1 = [];\n\n\n\n\tfor i in list_mask:\n\t\tlist_maps = jsonobj[\'hadoop\'][table][i][\'mask\'].split(\',\');\n\t\ttemp11 = "";\n\t\ttemp22 = "";\n\t\tfor j in list_maps:\n\t\t\ttemp11 = temp11 + \'mask_strings.put("\' + j.split(\':\')[0] + \'", "\' + j.split(\':\')[1] + \'");\'\n\t\t\ttemp22 = temp22 + \'mask_strings.put("\' + j.split(\':\')[1] + \'", "\' + j.split(\':\')[0] + \'");\'\n\t\tprint temp11\n\t\tprint temp22\n\t\t\t\n\t\ttemp_list = [\'public String mask_\'+i+\'(final String text){\\n\'] + [lines2[0]] + [temp11] +lines2[1:];\n\t\ttemp_list1 = [\'public String unmask_\'+i+\'(final String text){\\n\'] + [lines3[0]] + [temp22] +lines3[1:];\n\t\tlines_mask = lines_mask+temp_list;\n\t\tlines_mask1 = lines_mask1+temp_list1;\n\n\tconnection = MySQLdb.connect(host=\'localhost\',user=\'root\', passwd=\'hadoop\', db=database_name)\n\tcur=connection.cursor()\n\tquery = "desc "+table;\n\tcur.execute(query)\n\ttables = cur.fetchall()\n\ta = [];\n\tfor i in tables:\n\t\ta.append(i[0]);\n\n\tlist_str=[];\n\tlist_int=[];\n\n\twrite_file=""\n\tflag1 = 1;\n\tstr1 = "";\n\tstr2 = \'\'.join(lines_mask) + \'\'.join(lines_mask1) + \'\'.join(lines1);\n\tfor l in lines:\n\t\tstr1 = l;\n\t\tflag = 0;\n\t\tif "SqoopRecord  implements DBWritable, Writable" in l:\n\t\t\tstr1="import java.util.HashMap; \\n"+str1+str2;\n\n\t\tif "get_" in l:\n\t\t\tif "String" in l:\n\t\t\t\tind1 = l.index("get_");\n\t\t\t\tind2 = l[ind1+4:].index("(");\n\t\t\t\tlist_str.append(l[ind1+4:ind1+4+ind2]);\n\t\t\t\n\t\t\tif "Integer" in l:\n\t\t\t\tind1 = l.index("get_");\n\t\t\t\tind2 = l[ind1+4:].index("(");\n\t\t\t\tlist_int.append(l[ind1+4:ind1+4+ind2]);\n\n\t\tif flag1 == 1:\n\t\t\tfor i in list_str:\n\t\t\t\tif "this."+i in l and i in list_encrypt:\n\t\t\t\t\tind1 = l.index("JdbcWritableBridge");\n\t\t\t\t\tind2 = l.index(";");\n\t\t\t\t\tstr1 = l[:ind1]+"encrypt1("+l[ind1:ind2]+");";\t#encrypt1 is for string\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tif "this."+i in l and i in list_mask:\n\t\t\t\t\tind1 = l.index("JdbcWritableBridge");\n\t\t\t\t\tind2 = l.index(";");\n\t\t\t\t\tstr1 = l[:ind1]+"mask_"+i+"("+l[ind1:ind2]+");";\t#encrypt1 is for string\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tif flag == 1:\n\t\t\t\t\tbreak;\n\t\t\tfor i in list_int:\n\t\t\t\tif "this."+i in l and i in list_encrypt:\n\t\t\t\t\tind1 = l.index("JdbcWritableBridge");\n\t\t\t\t\tind2 = l.index(";");\n\t\t\t\t\tstr1 = l[:ind1]+"encrypt2("+l[ind1:ind2]+");";\t#encrypt1 is for string\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tif flag == 1:\n\t\t\t\t\tbreak;\n\n\t\tif flag1 == 1 and "}" in l:\n\t\t\tflag1 = 0;\n\n\t\tif "cur_result_set = __dbResults;" in l:\n\t\t\tflag1 = 1;\n\n\n\t\tif "JdbcWritableBridge.writeInteger" in l:\n\t\t\tind1 = l.index("JdbcWritableBridge.writeInteger");\n\t\t\ta = l[ind1:];\n\t\t\td = a.split(\',\');\n\t\t\tif d[0][32:] in list_encrypt:\n\t\t\t\tstr1 = a[:32]+\'decrypt2(\'+d[0][32:]+\')\'+a[len(d[0]):];\n\t\t\telse:\n\t\t\t\tstr1 = l;\n\n\t\tif "JdbcWritableBridge.writeString" in l:\n\t\t\tind1 = l.index("JdbcWritableBridge.writeString");\n\t\t\ta = l[ind1:];\n\t\t\td = a.split(\',\');\n\t\t\tif d[0][31:] in list_encrypt:\n\t\t\t\tstr1 = a[:31]+\'decrypt1(\'+d[0][31:]+\')\'+a[len(d[0]):];\n\t\t\telif d[0][31:] in list_mask:\n\t\t\t\tstr1 = a[:31]+\'unmask_\'+d[0][31:]+\'(\'+d[0][31:]+\')\'+a[len(d[0]):];\n\t\t\telse:\n\t\t\t\tstr1 = l;\n\n\t\twrite_file=write_file+str1;\n\t\tf = open(table+\'.java\',"w");\n\t\tf.write(write_file);\n\t\tf.close();\n\n\n@auth.requires_login()\ndef db_combination():\n\treturn dict(a=1);\n\t\n\n\n@auth.requires_login()\ndef all_jobs1():\n\treturn dict(a=1);\n\n@auth.requires_login()\ndef all_jobs():\n    jobs=[];\n    output = os.popen(""" jps | grep Jps | awk \'{print $1;}\' """).read()\n    output = output.split(\'\\n\')[:-1];\n    try :\n        connection = MySQLdb.connect(host=\'localhost\',user=\'root\', passwd=\'hadoop\', db=\'jobs\')\n        cur=connection.cursor();\n        query = "select * from db where result = 0 AND job_status = 1";\n        cur.execute(query)\n        tables = cur.fetchall()\n        cur1 = connection.cursor();\n        query = "select * from db where job_status = 0";\n        cur1.execute(query)\n        tables2 = cur1.fetchall()\n        cur2 = connection.cursor();\n        query = "select * from db where result != 0";\n        cur2.execute(query)\n        tables3 = cur2.fetchall()\n#        max_id = tables[0][0];\n    except:\n        print "weee2"\n    return dict(L = tables,running = tables2,failed=tables3,db_type="sql");\n@auth.requires_login()\ndef sql1():\n    tables = [];\n    path = \'/\'\n    if \'path\' in request.get_vars:\n        path = request.get_vars[\'path\'];\n    a = "hadoop fs -ls "+path+" | tr -s \' \' | cut -d \' \' -f8"\n    output = os.popen(a).read()\n    tokens = output.split(\'\\n\')\n    error = ""\n    try :\n        connection = MySQLdb.connect(host=\'localhost\',user=\'root\', passwd=\'hadoop\', db=database_name)\n        cur=connection.cursor()\n        query = "show tables"\n        cur.execute(query)\n        tables = cur.fetchall()\n        dic ={}\n        for (t,) in tables:\n                    \n                    cur = connection.cursor()\n                    \n                    query = "desc "+t +";";\n                    cur.execute(query);\n                    \n                    columns = cur.fetchall()\n                    dic[t] = []\n                    for i in columns:\n                            dic[t].append(i[0])\n#                    print dic[t]\n        return dict(tokens=tokens,error=error,tables=tables,test = request.get_vars,dic=dic)\n    except:\n        print "weee"\n        error = "failed to connect to MySQL: "\n        return dict(tokens=tokens,error=error,tables=tables,dic=dic)\n@auth.requires_login()\ndef hdfs1():\n    tables = [];\n    path = \'/\'\n    if \'path\' in request.get_vars:\n        path = request.get_vars[\'path\'];\n    a = "hadoop fs -ls "+path+" | tr -s \' \' | cut -d \' \' -f8"\n    output = os.popen(a).read()\n    tokens = output.split(\'\\n\')\n    error = ""\n    try :\n        connection = MySQLdb.connect(host=\'localhost\',user=\'root\', passwd=\'hadoop\', db=database_name)\n        cur=connection.cursor()\n        query = "show tables"\n        cur.execute(query)\n        tables = cur.fetchall()\n        return dict(tokens=tokens,error=error,tables=tables,test = request.get_vars)\n    except:\n        print "weee"\n        error = "failed to connect to MySQL: "\n        return dict(tokens=tokens,error=error,tables=tables)\n@auth.requires_login()\ndef main():\n    if request.get_vars[\'dbtype\'] == "sql":\n        redirect(URL(\'sql1\'));\n    elif request.get_vars[\'dbtype\'] == "hdfs":\n        redirect(URL(\'hdfs1\'));\n\n@auth.requires_login()\ndef main1():\n    if request.get_vars[\'dbtype\'] == "sql":\n        redirect(URL(\'sql2\'));\n    elif request.get_vars[\'dbtype\'] == "cassandra":\n        redirect(URL(\'cassandra2\'));\n\n\ndef sql2():\n\treturn dict(a=100);\n\n\n@auth.requires_login()\ndef hdfs():\n    json_data=open(\'/home/hduser/web2py/applications/Policy_server/json_files/\'+policy_name+\'.json\',\'r\')\n    data = json.load(json_data)\n    print data[\'hadoop\']\n    json_data.close()\n    #this is export\n    present_pid = os.getpid();\n    global codegen1;\n    posvars = request.post_vars;\n    posvars[\'op\'] = "export";\n    comm = "sqoop "+posvars[\'op\'];\n    print posvars[\'updateid\'];\n\n    max_id = 0;\n    try :\n        connection = MySQLdb.connect(host=\'localhost\',user=\'root\', passwd=\'hadoop\', db=\'jobs\')\n        cur=connection.cursor();\n        query = "insert into db(operation,table_transfered,start_time,job_status) values (\'" + posvars[\'op\'] + "\'," + "\'" + posvars[\'table\'] +"\'," + "NOW(),0);";\n        print query;\n        cur.execute(query)\n        connection.commit();\n        cur1=connection.cursor();\n        query = """ select max(id) from db;  """;\n        cur1.execute(query)\n        tables = cur1.fetchall()\n        max_id = tables[0][0];\n    except:\n        print "weee2"\n        \n    imp = "";\n\n\n\n\n    if posvars[\'op\'] == "export":\n#        comm=comm + " --connect jdbc:mysql://"+machine+"/"+database_name+" --username "+db_username+" --password \'"+password+"\' --table "+posvars[\'table\']+" "\n    \ttables_encrypt = [];\n    \ttables_mask = [];\n\tif posvars[\'table\'] not in data[\'hadoop\']:\n\t\tdata[\'hadoop\'][posvars[\'table\']] = {};\n\n    \tfor i in data[\'hadoop\'][posvars[\'table\']]:\n\t\tif data[\'hadoop\'][posvars[\'table\']][i] == "encrypt":\n\t\t\ttables_encrypt.append(i);\n\t\t\tposvars[\'decrypt\'] = 1;\n\n\t\tif "mask" in data[\'hadoop\'][posvars[\'table\']][i]::\n\t\t\ttables_mask.append(i);\n\t\t\tposvars[\'mask\'] = 1;\n\t\t\t\n        if \'decrypt\' in posvars or \'mask\' in posvars:\n\t        global Table;\n\t    \tTable = posvars[\'table\'];\n                codegen();\n\t\tcodechange(Table,tables_encrypt);\n\t\tcompile_code = """ /usr/lib/jvm/java-7-oracle/bin/javac -classpath /home/hduser/sqoop/sqoop-1.4.4.jar:/home/hduser/hadoop/hadoop-core-1.2.1.jar: """ + Table+".java; /usr/lib/jvm/java-7-oracle/bin/jar -cf "+Table+".jar "+Table+".class ";\n\t\toutput = os.popen(compile_code).read();\n                imp="  --jar-file "+Table+".jar --class-name "+Table;\n         \n\tcomm=comm + " --connect jdbc:mysql://"+machine+"/"+database_name+" --username "+db_username+" --password \'"+password+"\' --table "+posvars[\'table\']+" "+imp;\n\n\n        if \'directory\' in posvars:\n            comm=comm+" --export-dir "+posvars[\'directory\'];\n\n        if posvars[\'updateid\']!="" and posvars[\'updateid\']!="Enter reference column to update the table":\n            comm=comm+" --update-key "+posvars[\'updateid\'] + " --update-mode allowinsert";\n\n        print "Export command="+comm+" <br>";\n\n        comm = comm+ """ ;mysql --user=root --password=hadoop -e "use jobs;update db set result=$?,job_status=1  where id= """+ str(max_id) +""" AND job_status=0 "; exit 1 """;\n        file1 = open(str(present_pid),\'w\');\n        print comm;\n        file1.write(comm);\n        file1.close();\n        pid = os.fork();\n        if pid != 0:\n                try :\n                        connection = MySQLdb.connect(host=\'localhost\',user=\'root\', passwd=\'hadoop\', db=\'jobs\')\n                        cur=connection.cursor();\n                        query = "update db set pid="+ str(pid+1) + " where id="+str(max_id)+";";\n                        cur.execute(query)\n                        connection.commit();\n                        tables = cur.fetchall()\n                except:\n                        print "weee1"\n\n        else:\n                os.execlp(\'bash\',\'bash\',str(present_pid));\n\n    val=\'0\';#output[output.__len__()-2];\n    redirect(URL(\'all_jobs\'))\n\n\n@auth.requires_login()\ndef sql():\n    print "came to sql"\n    json_data=open(\'/home/hduser/web2py/applications/Policy_server/json_files/\'+policy_name+\'.json\',\'r\')\n    data = json.load(json_data)\n    print data[\'hadoop\']\n    json_data.close()\n    #this is import\n    present_pid = os.getpid();\n    global codegen1;\n    posvars = request.post_vars;\n    posvars[\'op\'] = "import";\n    all_tables = posvars[\'table\'];\n    print posvars;\n    print type(all_tables);\n    if type(all_tables)==type("str"):\n        all_tables=[all_tables];\n    first_flag = 0;\n    for tab in all_tables:\n        comm = "sleep "+ str(first_flag) +" ;sqoop "+posvars[\'op\']+" ";\n        first_flag = first_flag+2;\n        posvars[\'table\'] = tab;\n        max_id = 0;\n        print "before"\n        print posvars[\'table\'];\n        try :\n            print "try came"\n            print posvars[\'table\'];\n            connection = MySQLdb.connect(host=\'localhost\',user=\'root\', passwd=\'hadoop\', db=\'jobs\')\n            cur=connection.cursor();\n            query = "insert into db(operation,table_transfered,start_time,job_status) values (\'" + posvars[\'op\'] + "\'," + "\'" + posvars[\'table\'] +"\'," + "NOW(),0);";\n            cur.execute(query)\n            connection.commit();\n            cur1=connection.cursor();\n            query = """ select max(id) from db;  """;\n            cur1.execute(query)\n            tables = cur1.fetchall()\n            max_id = tables[0][0];\n        except:\n            print "weee2"\n\n        if posvars[\'op\'] == "import":\n            imp="";\n    \t    tables_encrypt = [];\n\t    tables_mask = [];\n\t    if posvars[\'table\'] not in data[\'hadoop\']:\n\t\t    data[\'hadoop\'][posvars[\'table\']] = {};\n       \t    for i in data[\'hadoop\'][posvars[\'table\']]:\n\t\tif data[\'hadoop\'][posvars[\'table\']][i] == "encrypt":\n\t\t\ttables_encrypt.append(i);\n\t\t\tposvars[\'encrypt\'] = 1;\t\n\t\tif "mask" in data[\'hadoop\'][posvars[\'table\']][i]:\n\t\t\ttables_mask.append(i);\n\t\t\tposvars[\'mask\'] = 1;\n\t\n\n\t    print tables_encrypt;\n\n    \t    if \'encrypt\' in posvars or \'mask\' in posvars:\n\t        global Table;\n\t    \tTable = posvars[\'table\'];\n                codegen();\n#                array=posvars[\'encrypt_columns\'].split(\',\');#explode(",",$_POST[\'encrypt_columns\']);\n                #print_r($array);\n                #change_import($TABLE.".java",$array,$_POST[\'enckey\']);\n#                compile1();\n\t\tcodechange(Table,tables_encrypt,tables_mask,data);\n\t\tcompile_code = """ /usr/lib/jvm/java-7-oracle/bin/javac -classpath /home/hduser/sqoop/sqoop-1.4.4.jar:/home/hduser/hadoop/hadoop-core-1.2.1.jar: """ + Table+".java; /usr/lib/jvm/java-7-oracle/bin/jar -cf "+Table+".jar "+Table+".class ";\n\t\toutput = os.popen(compile_code).read();\n\n                imp="  --jar-file "+Table+".jar --class-name "+Table;\n\n            comm=comm + " --connect jdbc:mysql://"+machine+"/"+database_name+" --username "+db_username+" --password \'"+password+"\' --append --table "+posvars[\'table\']+" "+imp;\n            if posvars[\'targetdir1\'] != "":\n                comm=comm+" --target-dir /"+posvars[\'targetdir1\'];\n            elif \'targetdir\' in posvars:\n                if posvars[\'targetdir\']==\'default\':\n                    comm=comm+" --target-dir /"+posvars[\'table\'];\n                elif posvars[\'targetdir\']!="":\n                    comm=comm+" --target-dir "+posvars[\'targetdir\'];\n            print query;\n            print "anath"\n#            print posvars[\'tab_columns\'];\n            if type(posvars[\'tab_columns\']) == type("apple"):\n                posvars[\'tab_columns\'] = [posvars[\'tab_columns\']];\n            columns = [];\n            yes = 0;\n            if \'tab_columns\' in posvars:\n                for i in posvars[\'tab_columns\']:\n                    a = i.split(\'$\');\n                    if a[0] == posvars[\'table\']:\n                        yes = 1;\n                        columns.append(a[1]);\n                if yes == 1:\n                    comm=comm+""" --columns " """ + columns[0];\n                for i in range(1,len(columns)):\n                    comm=comm+" ,"+columns[i];\n                comm=comm+""" " """;\n\n            if \'filetype\' in posvars:\n                comm=comm+ " "+posvars[\'filetype\'];\n\n            comm = comm+ """ ; mysql --user=root --password=hadoop -e "use jobs;update db set result=$?,job_status=1  where id= """+ str(max_id) +""" AND job_status=0 "; exit 1 """;\n            file1 = open(str(present_pid),\'w\');\n            file1.write(comm);\n            file1.close();\n            print comm;\n            print present_pid;\n            pid = os.fork();\n            if pid != 0:\n                    print pid;\n                    try :\n                            connection = MySQLdb.connect(host=\'localhost\',user=\'root\', passwd=\'hadoop\', db=\'jobs\')\n                            cur=connection.cursor();\n                            query = "update db set pid="+ str(pid+1) + " where id="+str(max_id)+";";\n                            cur.execute(query)\n                            connection.commit();\n                            tables = cur.fetchall()\n                    except:\n                            print "weee1"\n    \n            else:\n                    os.execlp(\'bash\',\'bash\',str(present_pid));\n\n    val=\'0\';#output[output.__len__()-2];\n    redirect(URL(\'all_jobs\'))\n#    return dict(posvars = request.post_vars);\ndef user():\n    return dict(form=auth())\n\nresponse._vars=response._caller(main)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object>"
p13
sS'text'
p14
S'\'\\t\\tif "mask" in data[\\\'hadoop\\\'][posvars[\\\'table\\\']][i]::\\n\''
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.SyntaxError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.SyntaxError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.SyntaxError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.SyntaxError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.SyntaxError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.SyntaxError'>"
p35
sS'filename'
p36
S"'/home/hduser/web2py/applications/Hadoop/controllers/default.py'"
p37
sS'lineno'
p38
S'347'
p39
sS'msg'
p40
S"'invalid syntax'"
p41
sS'__doc__'
p42
S"'Invalid syntax.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.SyntaxError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S'(\'invalid syntax\', (\'/home/hduser/web2py/applications/Hadoop/controllers/default.py\', 347, 52, \'\\t\\tif "mask" in data[\\\'hadoop\\\'][posvars[\\\'table\\\']][i]::\\n\'))'
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'52'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.SyntaxError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.SyntaxError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.SyntaxError object>"
p65
ssS'evalue'
p66
S'invalid syntax (default.py, line 347)'
p67
sS'request'
p68
cgluon.html
XML_unpickle
p69
(S'sy_\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>Hadoop</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-c89aee3c-3e8d-4ead-87ae-24dc1aab014c<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_hadoop</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-8d41a55e-c658-4188-ba6e-1474d1ec24f9<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_policy_server</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-8d11b54a-76ce-4651-8155-4ff921bf1f76<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-dec6e178-e203-4348-ab95-2e4804a202b9<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-dec6e178-e203-4348-ab95-2e4804a202b9; session_id_admin=127.0.0.1-c89aee3c-3e8d-4ead-87ae-24dc1aab014c; session_id_hadoop=127.0.0.1-8d41a55e-c658-4188-ba6e-1474d1ec24f9; session_id_policy_server=127.0.0.1-8d11b54a-76ce-4651-8155-4ff921bf1f76</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/Hadoop/default/all_jobs</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:28.0) Gecko/20100101 Firefox/28.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/Hadoop/default/main.html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>dbtype=sql</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>47474</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>anuraag-Inspiron-N5110</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/hduser/web2py/applications/admin/&#x27;, &#x27;/home/hduser/web2py/applications/welcome/&#x27;, &#x27;/home/hduser/web2py/applications/Hadoop/&#x27;, &#x27;/home/hduser/web2py/applications/Policy_server/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/hduser/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1f7fa28: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;anuraag-Inspiron-N5110&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: True, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/hduser/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;1&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/hduser/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-dec6e178-e203-4348-ab95-2e4804a202b9; session_id_admin=127.0.0.1-c89aee3c-3e8d-4ead-87ae-24dc1aab014c; session_id_hadoop=127.0.0.1-8d41a55e-c658-4188-ba6e-1474d1ec24f9; session_id_policy_server=127.0.0.1-8d11b54a-76ce-4651-8155-4ff921bf1f76</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/Hadoop/default/all_jobs</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:28.0) Gecko/20100101 Firefox/28.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>anuraag-Inspiron-N5110</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/Hadoop/default/main.html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>dbtype=sql</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>47474</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/Hadoop/default/main.html?dbtype=sql</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>anuraag-Inspiron-N5110</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/hduser/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.16.02.35.39</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f1d2f960270&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x1eec738&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f1d20307e50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f1d2f960270&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x1eec738&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f1d20307e50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/hduser/web2py/applications/Hadoop/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>main</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/hduser/web2py/applications/admin/&#x27;, &#x27;/home/hduser/web2py/applications/welcome/&#x27;, &#x27;/home/hduser/web2py/applications/Hadoop/&#x27;, &#x27;/home/hduser/web2py/applications/Policy_server/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/hduser/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1f7fa28: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;anuraag-Inspiron-N5110&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: True, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/hduser/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;1&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/hduser/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>anuraag-Inspiron-N5110</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.16.02.35.39</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 4, 16, 13, 59, 20, 431684)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/Hadoop/default/main.html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 4, 16, 8, 29, 20, 431766)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>Hadoop/127.0.0.1.2014-04-16.13-59-20.d0c5d404-8b91-4537-8715-25144a202a6a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f1cfc4d8210&gt;</div></td></tr></table></div>'
tRp70
sS'frames'
p71
(lp72
(dp73
S'file'
p74
S'/home/hduser/web2py/gluon/restricted.py'
p75
sS'dump'
p76
(dp77
S'code'
p78
S"'# coding: utf8\\n# try something like pooooooooooo...m=auth())\\n\\nresponse._vars=response._caller(main)\\n'"
p79
sS'layer'
p80
S"'/home/hduser/web2py/applications/Hadoop/controllers/default.py'"
p81
sS'global compile2'
p82
S'<function compile2>'
p83
sS'ccode'
p84
S'undefined'
p85
ssS'lnum'
p86
I219
sS'lines'
p87
(dp88
I214
S"    environment['__name__'] = '__restricted__'"
p89
sI215
S'    try:'
p90
sI216
S'        if isinstance(code, types.CodeType):'
p91
sI217
S'            ccode = code'
p92
sI218
S'        else:'
p93
sI219
S'            ccode = compile2(code, layer)'
p94
sI220
S'        exec ccode in environment'
p95
sI221
S'    except HTTP:'
p96
sI222
S'        raise'
p97
sI223
S'    except RestrictedError:'
p98
ssS'call'
p99
S"(code='# coding: utf8\\n# try something like pooooooooooo...m=auth())\\n\\nresponse._vars=response._caller(main)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/home/hduser/web2py/applications/Hadoop/controllers/default.py')"
p100
sS'func'
p101
S'restricted'
p102
sa(dp103
g74
S'/home/hduser/web2py/gluon/restricted.py'
p104
sg76
(dp105
S'builtincompile'
p106
S'<built-in function compile>'
p107
sS'code'
p108
S"'# coding: utf8\\n# try something like pooooooooooo...m=auth())\\n\\nresponse._vars=response._caller(main)\\n'"
p109
sS'code.rstrip'
p110
S'<built-in method rstrip of str object>'
p111
sS').replace'
p112
g85
sS'layer'
p113
S"'/home/hduser/web2py/applications/Hadoop/controllers/default.py'"
p114
ssg86
I202
sg87
(dp115
I197
S''
sI198
S'def compile2(code, layer):'
p116
sI199
S'    """'
p117
sI200
S"    The +'\\n' is necessary else compile fails when code ends in a comment."
p118
sI201
S'    """'
p119
sI202
S"    return compile(code.rstrip().replace('\\r\\n', '\\n') + '\\n', layer, 'exec')"
p120
sI203
S''
sI204
S''
sI205
S"def restricted(code, environment=None, layer='Unknown'):"
p121
sI206
S'    """'
p122
ssg99
S"(code='# coding: utf8\\n# try something like pooooooooooo...m=auth())\\n\\nresponse._vars=response._caller(main)\\n', layer='/home/hduser/web2py/applications/Hadoop/controllers/default.py')"
p123
sg101
S'compile2'
p124
sasS'pyver'
p125
S'Python 2.7.3: /usr/bin/python (prefix: /usr)'
p126
sS'session'
p127
g69
(S's\xdf\x08\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>2cd46cda-bc7e-4e5b-a0e6-f9c59452ed24</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 4, 16, 13, 59, 20, 431684)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>vamsi1899@gmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>1L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">1</td><td style="vertical-align:top;">:</td><td><div>user_1</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp128
sS'etype'
p129
S"<type 'exceptions.SyntaxError'>"
p130
sS'date'
p131
S'Wed Apr 16 13:59:20 2014'
p132
sS'response'
p133
g69
(S's$\x1c\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f1d246a6030&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_hadoop</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-8d41a55e-c658-4188-ba6e-1474d1ec24f9<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/Hadoop/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">copyright</td><td style="vertical-align:top;">:</td><td><div>Copyright 2011</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/main/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_hadoop</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/hduser/web2py/applications/Hadoop/sessions/127.0.0.1-8d41a55e-c658-4188-ba6e-1474d1ec24f9&#x27;, mode &#x27;rb+&#x27; at 0x7f1cfc2b3930&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/hduser/web2py/applications/Hadoop/sessions/127.0.0.1-8d41a55e-c658-4188-ba6e-1474d1ec24f9</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>18a368d92d98dba4a0bf3be8d9ceca9d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-8d41a55e-c658-4188-ba6e-1474d1ec24f9</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_hadoop</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>Hadoop</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>customize me!</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Hadoop</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/main.html</div></td></tr></table></div>'
tRp134
sS'locals'
p135
(dp136
g4
S"'/home/hduser/web2py/applications/Hadoop/controllers/default.py'"
p137
sg6
S"'# coding: utf8\\n# try something like pooooooooooo...m=auth())\\n\\nresponse._vars=response._caller(main)\\n'"
p138
sssS'traceback'
p139
S'Traceback (most recent call last):\n  File "/home/hduser/web2py/gluon/restricted.py", line 219, in restricted\n    ccode = compile2(code, layer)\n  File "/home/hduser/web2py/gluon/restricted.py", line 202, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\', \'\\n\') + \'\\n\', layer, \'exec\')\n  File "/home/hduser/web2py/applications/Hadoop/controllers/default.py", line 347\n    if "mask" in data[\'hadoop\'][posvars[\'table\']][i]::\n                                                     ^\nSyntaxError: invalid syntax\n'
p140
s.